
DROP TABLE IF EXISTS reviews;
-- DROP TABLE IF EXISTS metaData;
DROP TABLE IF EXISTS characteristic_review;
DROP TABLE IF EXISTS characteristics;
DROP TABLE IF EXISTS photos;

-- CREATE TABLE metaData (
--   id SERIAL PRIMARY KEY,
--   -- ratings ???,
--   -- recommended ???,
--   characteristics_id INT REFERENCES characteristics(id),
--   product_id INT REFERENCES products(id),
-- );

CREATE TABLE reviews (
  review_id integer GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  product_id INT NOT NULL,
  rating INT NOT NULL,
  date bigint NOT NULL,
  summary VARCHAR(2000) NOT NULL,
  body VARCHAR(1000) NOT NULL,
  recommended BOOLEAN NOT NULL DEFAULT false,
  reported BOOLEAN NOT NULL DEFAULT false,
  reviewer_name VARCHAR(200) NOT NULL,
  reviewer_email VARCHAR(400) NOT NULL,
  response VARCHAR(1000) DEFAULT null,
  helpfulness INT NOT NULL DEFAULT 0
  -- PRIMARY KEY (id),
  --   CONSTRAINT fk_products
  --     FOREIGN KEY (product_id)
  --      REFERENCES products(id)
);

CREATE TABLE characteristic_review (
  cr_id integer GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  characteristic_id INT,
  review_id INT NOT NULL,
  value INT NOT NULL
);

CREATE TABLE characteristics (
  char_id integer GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  product_id INT NOT NULL,
  name VARCHAR(50) NOT NULL
);

CREATE TABLE photos (
  photo_id integer GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  review_id INT,
  url VARCHAR(1000)
);

\set localpath `pwd` '/data/reviews.csv'
COPY reviews (review_id, product_id, rating, date, summary, body, recommended, reported, reviewer_name, reviewer_email, response, helpfulness)
FROM :'localpath'
DELIMITER ','
CSV HEADER;

\set localpath `pwd` '/data/characteristic_reviews.csv'
COPY characteristic_review (cr_id, characteristic_id, review_id, value)
FROM :'localpath'
DELIMITER ','
CSV HEADER;

\set localpath `pwd` '/data/characteristics.csv'
COPY characteristics (char_id, product_id, name)
FROM :'localpath'
DELIMITER ','
CSV HEADER;

\set localpath `pwd` '/data/reviews_photos.csv'
COPY photos (photo_id, review_id, url)
FROM :'localpath'
DELIMITER ','
CSV HEADER;

create index review_index on reviews(product_id);
create index photo_review_index on photos using btree(review_id);
create index characteristic_index on characteristics(product_id);
-- create index characteristic_id_index on characteristics(char_id);
create index characteristics_review_index on characteristic_review(review_id);
create index characteristic_review_id_index on characteristic_review using btree(characteristic_id);

select setval(pg_get_serial_sequence('reviews', 'review_id'),(select max(review_id) from reviews)+1);
select setval(pg_get_serial_sequence('photos', 'photo_id'),(select max(photo_id) from photos)+1);
select setval(pg_get_serial_sequence('characteristic_review', 'cr_id'),(select max(cr_id) from characteristic_review)+1);